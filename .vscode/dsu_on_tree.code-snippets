{
    "using in/out time": {
        "prefix": "dsu_on_tree",
        "body": [
          "vl adj[N];",
          "vl sz(N), in_t(N), out_t(N), ver(N);",
          "vl col(N), freq(N);",
          "ll tim=0;",
          " ",
          "void dfs(ll node, ll p=-1){",
          "    in_t[node] = tim;",
          "    ver[tim] = node;",
          "    sz[node] = 1;",
          "    for(ll it : adj[node]) {",
          "        if(it != p) {",
          "           tim++;",
          "           dfs(it, node);",
          "           sz[node] += sz[it];",
          "        }",
          "    }",
          "    out_t[node] = tim;",
          "}",
          "",
          "void dsu_on_tree(ll node,ll p=-1,bool keep=1){",
          "    ll mxsz = -1, bigChild = -1;",
          "",
          "    for(auto it : adj[node]){",
          "        if(it != p && sz[it] > mxsz){",
          "            mxsz = sz[it], bigChild = it;",
          "        }",
          "    }",
          "",
          "    for(auto it : adj[node]){",
          "        if(it != p && it != bigChild){",
          "            dsu_on_tree(it, node, 0);  ",
          "            // run a dfs on small childs and clear them from freq (keep=0)",
          "        }",
          "    }",
          "",
          "    if(bigChild != -1) dsu_on_tree(bigChild, node, 1); ",
          "    // bigChild marked as big and not cleared from freq (keep=1)",
          "    ",
          "    freq[col[node]]++;",
          "    ",
          "    for(auto it : adj[node]){",
          "        if(it != p && it != bigChild){",
          "            f(t,in_t[it],out_t[it]+1) freq[col[ver[t]]]++;     ",
          "        }",
          "    }",
          "   ",
          "    //now freq[c] is the number of vertices in subtree of vertex node that has color c.",
          "    //We can answer the queries easily.",
          "    ",
          "    if(!keep) f(t,in_t[node],out_t[node]+1) freq[col[ver[t]]]--;",
          "}",
          "",
          "//dfs(1);",
          "//dsu_on_tree(1);",
          ""
        ],
        "description": "using in/out time"
    }
}